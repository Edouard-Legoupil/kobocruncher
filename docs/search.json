[{"path":[]},{"path":"/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement legoupil@unhcr.org. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.0, available https://www.contributor-covenant.org/version/2/0/code_of_conduct.html. Community Impact Guidelines inspired Mozilla’s code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":[]},{"path":[]},{"path":"/articles/crunching-function-for-xlsform.html","id":"data-loading","dir":"Articles","previous_headings":"Preparing objects","what":"Data loading","title":"Crunching Function for XlsForm","text":"","code":"datalist <- kobo_data(datapath = system.file(\"data.xlsx\", package = \"kobocruncher\") ) # MainFrame datalist[[\"main\"]] #> # A tibble: 5 × 26 #>   start               end                 location       profi…¹ profi…² profi…³ #>   <dttm>              <dttm>              <chr>          <chr>   <chr>   <chr>   #> 1 2022-10-27 08:57:57 2022-11-10 08:49:09 private_facil… VEN     Consul… accomo… #> 2 2022-10-24 11:36:52 2022-10-24 15:46:00 home           HND     farmer  accomo… #> 3 2022-10-26 16:19:35 2022-10-26 18:15:07 subcenter      SLV     vendor  educat… #> 4 2022-10-26 16:19:35 2022-10-26 17:51:14 subcenter      SLV     teacher safety… #> 5 2022-10-26 14:02:06 2022-10-26 16:10:25 home           COL     farmer  employ… #> # … with 20 more variables: profile.reason.accomodation <dbl>, #> #   profile.reason.employment <dbl>, profile.reason.education <dbl>, #> #   profile.reason.community <dbl>, profile.reason.safety <dbl>, #> #   profile.reason.movement <dbl>, profile.reason.reunification <dbl>, #> #   profile.reason.no_answer <dbl>, profile.reason.other <dbl>, #> #   profile.HHSize <dbl>, `_id` <dbl>, `_uuid` <chr>, `_submission_time` <dbl>, #> #   `_validation_status` <lgl>, `_notes` <lgl>, `_status` <chr>, … # Second Frame - based on presence of repeat within the form, aka nested or # hierarchical data structure, etc...  datalist[[\"members\"]] #> # A tibble: 12 × 14 #>    members.age members…¹ _inde…² _pare…³ _pare…⁴ _subm…⁵ _subm…⁶ _subm…⁷ _subm…⁸ #>          <dbl> <chr>       <dbl> <chr>     <dbl>   <dbl> <chr>     <dbl> <lgl>   #>  1          56 male            1 Sample…       1  2.08e7 48cc75…  44686. NA      #>  2           2 male            2 Sample…       2  2.08e7 f1c3d3…  44686. NA      #>  3           3 male            3 Sample…       2  2.08e7 f1c3d3…  44686. NA      #>  4          10 female          4 Sample…       2  2.08e7 f1c3d3…  44686. NA      #>  5          45 male            5 Sample…       2  2.08e7 f1c3d3…  44686. NA      #>  6          35 female          6 Sample…       2  2.08e7 f1c3d3…  44686. NA      #>  7           4 male            7 Sample…       3  2.08e7 1bac72…  44686. NA      #>  8          34 female          8 Sample…       3  2.08e7 1bac72…  44686. NA      #>  9          34 male            9 Sample…       3  2.08e7 1bac72…  44686. NA      #> 10          51 female         10 Sample…       4  2.08e7 aa9f07…  44686. NA      #> 11          21 male           11 Sample…       5  2.08e7 e83161…  44686. NA      #> 12          25 female         12 Sample…       5  2.08e7 e83161…  44686. NA      #> # … with 5 more variables: `_submission__notes` <lgl>, #> #   `_submission__status` <chr>, `_submission__submitted_by` <lgl>, #> #   `_submission__tags` <lgl>, parent_index <dbl>, and abbreviated variable #> #   names ¹​members.sex, ²​`_index`, ³​`_parent_table_name`, ⁴​`_parent_index`, #> #   ⁵​`_submission__id`, ⁶​`_submission__uuid`, ⁷​`_submission__submission_time`, #> #   ⁸​`_submission__validation_status`"},{"path":"/articles/crunching-function-for-xlsform.html","id":"extend-the-xlsform-to-add-instructions-for-the-analysis-plan","dir":"Articles","previous_headings":"Preparing objects","what":"Extend the xlsform to add instructions for the analysis plan","title":"Crunching Function for XlsForm","text":"Now can extend xlsform used document key next steps data preparation.","code":"# kobo_prepare_form(xlsformpath = system.file(\"form.xlsx\", package = \"kobocruncher\"), #                   xlsformpathout = \"form_with_plan.xlsx\", #                   label_language = \"\")"},{"path":"/articles/crunching-function-for-xlsform.html","id":"prepare-data-dictionnary","dir":"Articles","previous_headings":"Preparing objects","what":"Prepare data dictionnary","title":"Crunching Function for XlsForm","text":"","code":"dico <- kobo_dico( xlsformpath = system.file(\"sample_xlsform.xlsx\", package = \"kobocruncher\") ) # Survey questions <- as.data.frame(dico[[\"variables\"]]) knitr::kable(utils::head(questions, 10)) # Choices responses <- as.data.frame(dico[[\"modalities\"]]) knitr::kable(utils::head(responses, 10)) # Settings metadata <- as.data.frame(dico[[\"settings\"]]) knitr::kable(utils::head(metadata, 10)) # Report ToC toc <- as.data.frame(dico[[\"plan\"]]) knitr::kable(utils::head(toc, 10)) # Indicator indicator <- as.data.frame(dico[[\"indicator\"]]) knitr::kable(utils::head(indicator, 10))"},{"path":[]},{"path":"/articles/crunching-function-for-xlsform.html","id":"indicator-calculation","dir":"Articles","previous_headings":"Data Processing","what":"Indicator Calculation","title":"Crunching Function for XlsForm","text":"Indicator calculation","code":"xlsformpath <- system.file(\"sample_xlsform.xlsx\", package = \"kobocruncher\") xlsformpathout <- \"sample_xlsform_withindic.xlsx\"  dico <- kobo_dico( xlsformpath = system.file(\"sample_xlsform.xlsx\", package = \"kobocruncher\") ) datalist <- kobo_data(datapath = system.file(\"data.xlsx\", package = \"kobocruncher\") )  ## Check if we add no indicator expanded  <- kobo_indicator(datalist = datalist,                             dico = dico,                             indicatoradd = NULL ,                             xlsformpath = xlsformpath,                             xlsformpathout = xlsformpathout) #> no calculated indicators has been defined...   ## Example 1: Simple dummy filter indicatoradd <- c(  name =  \"inColombia\",                     type = \"select_one\",                     label = \"Is from Colombia\",                     repeatvar = \"main\",                     calculation = \"dplyr::if_else(datalist[[\\\"main\\\"]]$profile.country ==\\\"COL\\\", \\\"yes\\\",\\\"no\\\")\")  expanded  <- kobo_indicator(datalist = datalist,                     dico = dico,                  indicatoradd = indicatoradd ,                  xlsformpath = xlsformpath,                  xlsformpathout = xlsformpathout) ## Replace existing dico <- expanded[[\"dico\"]] datalist <- expanded[[\"datalist\"]]  ## Check my new indicator table(datalist[[1]]$inColombia, useNA = \"ifany\") #>  #>  no yes  #>   4   1    ## Example 2: calculation on nested elements and build an indicator list indicatoradd2 <- c(  name =  \"hasfemalemembers\",               type = \"select_one\",               label = \"HH has female members \",               repeatvar = \"main\",               calculation = \"datalist[[\\\"members\\\"]] |>                             dplyr::select( members.sex, parent_index) |>                             tidyr::gather(  parent_index, members.sex) |>                             dplyr::count(parent_index, members.sex) |>                             tidyr::spread(members.sex, n, fill = 0)  |>                            dplyr::select( female)\")  indicatorall <- list(indicatoradd, indicatoradd2  )   expanded  <- kobo_indicator(datalist = datalist,                     dico = dico,                  indicatoradd = indicatorall ,                  xlsformpath = xlsformpath,                  xlsformpathout = xlsformpathout) ## Replace existing dico <- expanded[[\"dico\"]] datalist <- expanded[[\"datalist\"]]   ## Check my new indicator table(datalist[[1]]$hasfemalemembers, useNA = \"ifany\") #> female #> 0 1 2  #> 1 3 1  #   Example of calculations: #    #   1. Create a filters on specific criteria #   'dplyr::if_else(datalist[[\"main\"]]$variable ==\"criteria\", \"yes\",\"no\")' #    #    #   2. Ratio between 2 numeric variable #   'datalist[[\"main\"]]$varnum1 / datalist[[\"main\"]]$varnum2' #    #    #   3. Calculation on date - month between data and now calculated in months #   'lubridate::interval( datalist[[\"main\"]]$datetocheck,  #                         lubridate::today()) %/%  months(1)' #    #   4. Discretization of numeric variable according to quintile #   'Hmisc::cut2(datalist[[\"main\"]]$varnum, g =5)' #    #   5. Discretization of numeric variable according to fixed break -  #   for instance case size from integer to categoric #   'cut(datalist[[\"main\"]]$casesize, breaks = c(0, 1, 2, 3,5,30),  #   labels = c(\"Case.size.1\", \"Case.size.2\", \"Case.size.3\",  #   \"Case.size.4.5\", \"Case.size.6.or.more\" ), include.lowest=TRUE)' #    #   6. Aggregate variable from nested frame (aka within repeat) to parent table #   'datalist[[\"members\"]] |> #       dplyr::select( members.sex, parent_index) |> #       tidyr::gather(  parent_index, members.sex) |> #       dplyr::count(parent_index, members.sex) |> #       tidyr::spread(members.sex, n, fill = 0)  |> #       dplyr::select( female)'"},{"path":"/articles/crunching-function-for-xlsform.html","id":"weight-the-dataset","dir":"Articles","previous_headings":"Data Processing","what":"Weight the dataset","title":"Crunching Function for XlsForm","text":"","code":"#kobo_weight()"},{"path":"/articles/crunching-function-for-xlsform.html","id":"assess-disclosure-risk","dir":"Articles","previous_headings":"Data Processing","what":"Assess Disclosure Risk","title":"Crunching Function for XlsForm","text":"….","code":"# dico <- kobo_dico( xlsformpath = system.file(\"sample_xlsform.xlsx\", package = \"kobocruncher\") ) # datalist <- kobo_data(datapath = system.file(\"data.xlsx\", package = \"kobocruncher\") ) #  # kobo_anonymise(datalist = datalist, #                    dico = dico, #                 indicatoradd = indicatoradd   )"},{"path":[]},{"path":"/articles/crunching-function-for-xlsform.html","id":"get-the-correct-frame-for-a-specific-variable","dir":"Articles","previous_headings":"Labeling functions","what":"Get the correct frame for a specific variable","title":"Crunching Function for XlsForm","text":"","code":"dico <- kobo_dico( xlsformpath = system.file(\"sample_xlsform.xlsx\", package = \"kobocruncher\") ) datalist <- kobo_data(datapath = system.file(\"data.xlsx\", package = \"kobocruncher\") )  data <- kobo_frame(datalist = datalist,                    dico = dico,                    var = \"members.sex\"   ) knitr::kable(utils::head(data,5))"},{"path":"/articles/crunching-function-for-xlsform.html","id":"get-the-label-for-a-specific-variable","dir":"Articles","previous_headings":"Labeling functions","what":"Get the label for a specific variable","title":"Crunching Function for XlsForm","text":"","code":"dico <- kobo_dico( xlsformpath = system.file(\"sample_xlsform.xlsx\", package = \"kobocruncher\") )  label_varname(dico = dico,                x =\"profile.country\") #> [1] \"What is your country of Origin?\""},{"path":"/articles/crunching-function-for-xlsform.html","id":"get-interpretation-hint-for-a-specific-variable","dir":"Articles","previous_headings":"Labeling functions","what":"Get interpretation hint for a specific variable","title":"Crunching Function for XlsForm","text":"","code":"dico <- kobo_dico( xlsformpath = system.file(\"sample_xlsform.xlsx\", package = \"kobocruncher\") )  label_varhint(dico = dico,                x =\"profile.country\") #> [1] \"this is a hint\""},{"path":"/articles/crunching-function-for-xlsform.html","id":"get-all-the-choices-labels-options-for-a-specific-variable","dir":"Articles","previous_headings":"Labeling functions","what":"Get all the choices labels options for a specific variable","title":"Crunching Function for XlsForm","text":"","code":"dico <- kobo_dico( xlsformpath = system.file(\"sample_xlsform.xlsx\", package = \"kobocruncher\") ) datalist <- kobo_data(datapath = system.file(\"data.xlsx\", package = \"kobocruncher\") )  data <- kobo_frame(datalist = datalist,                    dico = dico,                    var = \"profile.country\"   )  label_choiceset(dico = dico,                  x=\"profile.country\")(data$profile.country) #>           VEN           HND           SLV           SLV           COL  #>   \"Venezuela\"    \"Honduras\" \"El Salvador\" \"El Salvador\"    \"Colombia\"  ## Test when there's no dictionnary data$profile.occupation #> [1] \"Consultant\" \"farmer\"     \"vendor\"     \"teacher\"    \"farmer\" label_choiceset(dico = dico,                  x=\"profile.occupation\")(data$profile.occupation) #>         <NA>         <NA>         <NA>         <NA>         <NA>  #> \"Consultant\"     \"farmer\"     \"vendor\"    \"teacher\"     \"farmer\""},{"path":[]},{"path":[]},{"path":"/articles/crunching-function-for-xlsform.html","id":"plotting-select-one-variable","dir":"Articles","previous_headings":"Plotting Functions","what":"Plotting Select one variable","title":"Crunching Function for XlsForm","text":"","code":"dico <- kobo_dico( xlsformpath = system.file(\"sample_xlsform.xlsx\", package = \"kobocruncher\") ) datalist <- kobo_data(datapath = system.file(\"data.xlsx\", package = \"kobocruncher\") )  plot_select_one(datalist = datalist,               dico = dico,                var = \"profile.country\",               showcode = TRUE) #>  #> What is your country of Origin? #> `plot_select_one(datalist = datalist, dico = dico, \"profile.country\")`  #>  #>  #> Loading required package: ggplot2 # plot_select_one(datalist = datalist, #               dico = dico,  #               var = \"profile.countryerror\", #               showcode = TRUE)"},{"path":"/articles/crunching-function-for-xlsform.html","id":"plotting-select-multiple-variable","dir":"Articles","previous_headings":"Plotting Functions","what":"Plotting Select multiple variable","title":"Crunching Function for XlsForm","text":"","code":"dico <- kobo_dico( xlsformpath = system.file(\"sample_xlsform.xlsx\", package = \"kobocruncher\") ) datalist <- kobo_data(datapath = system.file(\"data.xlsx\", package = \"kobocruncher\") )   plot_select_multiple(datalist = datalist,               dico = dico,                var = \"profile.reason\",               showcode = TRUE             ) #> Why did you left? #>   `plot_select_multiple(datalist = datalist, dico = dico, \"profile.reason\")`  #>  #> # plot_select_multiple(datalist = datalist, #               dico = dico,  #               var = \"profile.reason1\", #               showcode = TRUE #             )"},{"path":"/articles/crunching-function-for-xlsform.html","id":"plotting-numeric-variable","dir":"Articles","previous_headings":"Plotting Functions","what":"Plotting Numeric variable","title":"Crunching Function for XlsForm","text":"","code":"dico <- kobo_dico( xlsformpath = system.file(\"sample_xlsform.xlsx\", package = \"kobocruncher\") ) datalist <- kobo_data(datapath = system.file(\"data.xlsx\", package = \"kobocruncher\") )  plot_integer(datalist = datalist,               dico = dico,                var = \"members.age\",               showcode = TRUE) #> Age #>   `plot_integer(datalist = datalist, dico = dico, \"members.age\")`  #>  #>  #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`."},{"path":"/articles/crunching-function-for-xlsform.html","id":"plotting-open-text-variable","dir":"Articles","previous_headings":"Plotting Functions","what":"Plotting Open Text variable","title":"Crunching Function for XlsForm","text":"","code":"dico <- kobo_dico( xlsformpath = system.file(\"sample_xlsform.xlsx\", package = \"kobocruncher\") ) datalist <- kobo_data(datapath = system.file(\"data.xlsx\", package = \"kobocruncher\") )  plot_text(datalist = datalist,               dico = dico,                var = \"profile.occupation\",               showcode = TRUE) #> Loading required package: tm #> Loading required package: NLP #>  #> Attaching package: 'NLP' #> The following object is masked from 'package:ggplot2': #>  #>     annotate #> Warning in tm_map.SimpleCorpus(., toSpace, \"/\"): transformation drops documents #> Warning in tm_map.SimpleCorpus(., toSpace, \"@\"): transformation drops documents #> Warning in tm_map.SimpleCorpus(., toSpace, \"\\\\|\"): transformation drops #> documents #> Warning in tm_map.SimpleCorpus(., content_transformer(tolower)): transformation #> drops documents #> Warning in tm_map.SimpleCorpus(., removeNumbers): transformation drops documents #> Warning in tm_map.SimpleCorpus(., removePunctuation): transformation drops #> documents #> Warning in tm_map.SimpleCorpus(., stripWhitespace): transformation drops #> documents #> Warning in tm_map.SimpleCorpus(., stemDocument): transformation drops documents #> Warning in tm_map.SimpleCorpus(., removeWords, stopwords(\"english\")): #> transformation drops documents #> Warning in tm_map.SimpleCorpus(., removeWords, c(\"blabla1\", \"blabla2\")): #> transformation drops documents #>  #> What's you occupation? #>   `plot_text(datalist = datalist, dico = dico, \"profile.occupation\")`"},{"path":[]},{"path":"/articles/crunching-function-for-xlsform.html","id":"plotting-select-one-variable-with-cross-tabulation","dir":"Articles","previous_headings":"Plotting Functions","what":"Plotting Select one variable with cross tabulation","title":"Crunching Function for XlsForm","text":"","code":"dico <- kobo_dico( xlsformpath = system.file(\"sample_xlsform.xlsx\", package = \"kobocruncher\") ) datalist <- kobo_data(datapath = system.file(\"data.xlsx\", package = \"kobocruncher\") )  plot_select_one_cross(datalist = datalist,               dico = dico,                var = \"profile.country\",               by_var = \"profile.occupation\",               showcode = TRUE               ) #> What is your country of Origin? #>   `plot_select_one_cross(datalist = datalist, dico = dico, \"profile.country\",\"profile.occupation\")`  #>  #> ## test if variable are not in the same frame... plot_select_one_cross(datalist = datalist,               dico = dico,                var = \"profile.country\",               by_var = \"members.sex\",               showcode = TRUE               )"},{"path":"/articles/crunching-function-for-xlsform.html","id":"plotting-select-multiple-variable-with-cross-tabulation","dir":"Articles","previous_headings":"Plotting Functions","what":"Plotting Select multiple variable with cross-tabulation","title":"Crunching Function for XlsForm","text":"","code":"dico <- kobo_dico( xlsformpath = system.file(\"sample_xlsform.xlsx\", package = \"kobocruncher\") ) datalist <- kobo_data(datapath = system.file(\"data.xlsx\", package = \"kobocruncher\") )  plot_select_multiple_cross(datalist = datalist,               dico = dico,                var = \"profile.reason\",               by_var = \"location\",               showcode = TRUE) #> Why did you left? #>   `plot_select_multiple_cross(datalist = datalist, dico = dico, \"profile.reason\",\"location\")`  #>  #>"},{"path":"/articles/crunching-function-for-xlsform.html","id":"plotting-numeric-variable-with-cross-tabulation","dir":"Articles","previous_headings":"Plotting Functions","what":"Plotting Numeric variable with cross-tabulation","title":"Crunching Function for XlsForm","text":"","code":"dico <- kobo_dico( xlsformpath = system.file(\"sample_xlsform.xlsx\", package = \"kobocruncher\") ) datalist <- kobo_data(datapath = system.file(\"data.xlsx\", package = \"kobocruncher\") )  plot_integer_cross(datalist = datalist,               dico = dico,                var = \"members.age\",               by_var = \"members.sex\",               showcode = TRUE)"},{"path":"/articles/crunching-function-for-xlsform.html","id":"plotting-correlation","dir":"Articles","previous_headings":"Plotting Functions","what":"Plotting Correlation","title":"Crunching Function for XlsForm","text":"","code":"dico <- kobo_dico( xlsformpath = system.file(\"sample_xlsform.xlsx\", package = \"kobocruncher\") ) datalist <- kobo_data(datapath = system.file(\"data.xlsx\", package = \"kobocruncher\") )  plot_correlation(datalist = datalist,               dico = dico,                var = \"profile.occupation\",               by_var = \"profile.country\",               datasource = NULL) #> Warning in stats::chisq.test(formula$target, formula$tested): Chi-squared #> approximation may be incorrect #>  #>  No significant association found between profile.occupation &  profile.country (p.value :0.3505)."},{"path":[]},{"path":"/articles/crunching-function-for-xlsform.html","id":"plotting-likert","dir":"Articles","previous_headings":"Plotting Functions","what":"Plotting Likert","title":"Crunching Function for XlsForm","text":"","code":"dicolikert <- kobo_dico( xlsformpath = system.file(\"form_likert.xlsx\", package = \"kobocruncher\") ) datalistlikert <- kobo_data(datapath = system.file(\"data_likert.xlsx\", package = \"kobocruncher\") ) #> Warning: Unknown or uninitialised column: `_index`.  plot_likert(datalist = datalistlikert,             dico = dicolikert,             datasource = NULL,             scopei =  \"group_ei8jz33\",             repeatvari =   \"main\",             ## getting the list_name and corresponding label             list_namei = \"yk0td68\"            ) #> Loading required package: dplyr #>  #> Attaching package: 'dplyr' #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union #> Loading required package: likert #> Loading required package: xtable #>  #> Attaching package: 'likert' #> The following object is masked from 'package:dplyr': #>  #>     recode #> Loading required package: cowplot #> Warning: `funs()` was deprecated in dplyr 0.8.0. #> ℹ Please use a list of either functions or lambdas: #>  #> # Simple named list: list(mean = mean, median = median) #>  #> # Auto named with `tibble::lst()`: tibble::lst(mean, median) #>  #> # Using lambdas list(~ mean(., trim = .2), ~ median(., na.rm = TRUE)) #> ℹ The deprecated feature was likely used in the kobocruncher package. #>   Please report the issue at #>   <"},{"path":"/articles/crunching-function-for-xlsform.html","id":"plotting-clusters","dir":"Articles","previous_headings":"Plotting Functions","what":"Plotting clusters","title":"Crunching Function for XlsForm","text":"….","code":""},{"path":"/articles/crunching-function-for-xlsform.html","id":"plotting-prediction","dir":"Articles","previous_headings":"Plotting Functions","what":"Plotting prediction","title":"Crunching Function for XlsForm","text":"….","code":""},{"path":"/articles/crunching-function-for-xlsform.html","id":"plotting-scores","dir":"Articles","previous_headings":"Plotting Functions","what":"Plotting scores","title":"Crunching Function for XlsForm","text":"….","code":""},{"path":"/articles/crunching-function-for-xlsform.html","id":"plotting-header-variable","dir":"Articles","previous_headings":"Plotting Functions","what":"Plotting Header variable","title":"Crunching Function for XlsForm","text":"","code":"dico <- kobo_dico( xlsformpath = system.file(\"sample_xlsform.xlsx\", package = \"kobocruncher\") )  plot_header( dico = dico,                var = \"profile.profile\") #> ------ #>  #>  #>  #> ## Respondant profile  # class(plot_header( dico = dico,  #               var = \"profile.profile\")) #  dput(plot_header( dico = dico,               var = \"profile.profile\")) #> ------ #>  #>  #>  #> ## Respondant profile #>  #> NULL #  message(plot_header( dico = dico,                 var = \"profile.profile\")) #> ------ #>  #>  #>  #> ## Respondant profile #>   cat(plot_header( dico = dico,                 var = \"profile.profile\")) #> ------ #>  #>  #>  #> ## Respondant profile  print(plot_header( dico = dico,                var = \"profile.profile\"),       useSource = FALSE) #> ------ #>  #>  #>  #> ## Respondant profile #>  #> NULL"},{"path":[]},{"path":"/articles/crunching-function-for-xlsform.html","id":"crunching-variables-based-on-a-plan","dir":"Articles","previous_headings":"Report generation","what":"Crunching Variables based on a plan","title":"Crunching Function for XlsForm","text":"","code":"dico <- kobo_dico( xlsformpath = system.file(\"sample_xlsform.xlsx\", package = \"kobocruncher\") ) datalist <- kobo_data(datapath = system.file(\"data.xlsx\", package = \"kobocruncher\") )  kobo_cruncher(datalist = datalist,               dico = dico,               datasource = \"a great survey!\") #>  #> Where is the interview taking place #> `plot_select_one(datalist = datalist, dico = dico, \"location\")`  #>  #> #> ------ #>  #>  #>  #> ## Respondant profile #>  #>  #> What is your country of Origin? #> `plot_select_one(datalist = datalist, dico = dico, \"profile.country\")`  #>  #>  #> Warning in tm_map.SimpleCorpus(., toSpace, \"/\"): transformation drops documents #> Warning in tm_map.SimpleCorpus(., toSpace, \"@\"): transformation drops documents #> Warning in tm_map.SimpleCorpus(., toSpace, \"\\\\|\"): transformation drops #> documents #> Warning in tm_map.SimpleCorpus(., content_transformer(tolower)): transformation #> drops documents #> Warning in tm_map.SimpleCorpus(., removeNumbers): transformation drops documents #> Warning in tm_map.SimpleCorpus(., removePunctuation): transformation drops #> documents #> Warning in tm_map.SimpleCorpus(., stripWhitespace): transformation drops #> documents #> Warning in tm_map.SimpleCorpus(., stemDocument): transformation drops documents #> Warning in tm_map.SimpleCorpus(., removeWords, stopwords(\"english\")): #> transformation drops documents #> Warning in tm_map.SimpleCorpus(., removeWords, c(\"blabla1\", \"blabla2\")): #> transformation drops documents #>  #> What's you occupation? #>   `plot_text(datalist = datalist, dico = dico, \"profile.occupation\")` #> Why did you left? #>   `plot_select_multiple(datalist = datalist, dico = dico, \"profile.reason\")`  #>  #> #> What's the size of your household? #>   `plot_integer(datalist = datalist, dico = dico, \"profile.HHSize\")`  #>  #>  #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. #> Age #>   `plot_integer(datalist = datalist, dico = dico, \"members.age\")`  #>  #>  #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. #>  #> Sex #> `plot_select_one(datalist = datalist, dico = dico, \"members.sex\")`  #>  #>"},{"path":"/articles/crunching-function-for-xlsform.html","id":"crunching-likert-componnents","dir":"Articles","previous_headings":"Report generation","what":"Crunching Likert componnents","title":"Crunching Function for XlsForm","text":"","code":"dicolikert <- kobo_dico( xlsformpath = system.file(\"form_likert.xlsx\", package = \"kobocruncher\") ) datalistlikert <- kobo_data(datapath = system.file(\"data_likert.xlsx\", package = \"kobocruncher\") ) #> Warning: Unknown or uninitialised column: `_index`.  kobo_likert(datalist = datalistlikert,               dico = dicolikert,               datasource = \"a great survey!\") #> 3 groups of likert questions in the form `plot_likert(datalist = datalist, dico = dico,  scopei =  \"group_ei8jz33\",   list_namei =  \"yk0td68\",  repeatvari =  \"main\")`  #>  #> #>  `plot_likert(datalist = datalist, dico = dico,  scopei =  \"group_pm0cj55\",   list_namei =  \"yk0td68\",  repeatvari =  \"main\")`  #>  #> #>  `plot_likert(datalist = datalist, dico = dico,  scopei =  \"group_wc0ig44\",   list_namei =  \"yk0td68\",  repeatvari =  \"main\")`  #>  #>"},{"path":"/articles/crunching-function-for-xlsform.html","id":"archive-files-in-ridl","dir":"Articles","previous_headings":"Report generation","what":"Archive files in RIDL","title":"Crunching Function for XlsForm","text":"","code":"### Example used for each template  # namethisfile = basename(rstudioapi::getSourceEditorContext()$path )   ### template_1_exploration # if( params$publish == \"yes\"){ #   kobo_ridl(ridl = params$ridl,  #                       datafolder = params$datafolder,  #                       form = params$form, #                       name =  namethisfile, #                       republish = params$republish,  #                       visibility =  params$visibility, #                       stage = params$stage) }  ### template_2_interpretation   # if( params$publish == \"yes\"){ #   kobo_ridl(ridl = params$ridl,  #                       datafolder = params$datafolder,  #                       form = params$form, #                       name =  namethisfile, #                       republish = params$republish, #                       visibility =  params$visibility, #                       stage = \"interpretation_prez\") }  ### template_3_dissemination   # if( params$publish == \"yes\"){ #  kobo_ridl(ridl = params$ridl,  #                       datafolder = params$datafolder,  #                       form = params$form, #                       name =  namethisfile, #                       republish = params$republish, #                       visibility =  params$visibility, #                       stage = \"dissemination_story\") }"},{"path":"/articles/crunching-function-for-xlsform.html","id":"report-template-a-for-automatic-data-exploration","dir":"Articles","previous_headings":"Report generation","what":"Report Template A for Automatic Data Exploration","title":"Crunching Function for XlsForm","text":"","code":"# template_1_exploration(datafolder= \"data-raw\", #                                    ridl =  \"ridlproject\", #                                     data = \"data.xlsx\" , #                                     form =  \"form.xlsx\", #                                     datasource = \"Study name reference\", #                                     publish =  \"no\",  #                                     republish = \"no\", #                                     visibility = \"public\", #                                     stage = \"exploration_initial\", #                                    language = \"\", #                                    folder = \"Report\")"},{"path":"/articles/crunching-function-for-xlsform.html","id":"report-template-b-for-joint-data-interpretation-session","dir":"Articles","previous_headings":"Report generation","what":"Report Template B for Joint Data Interpretation Session","title":"Crunching Function for XlsForm","text":"second template used following systematic data exploration. generate PowerPoint presentation See detailed presentation step : https://www.youtube.com/watch?v=0jE-Y7g88K4&feature=youtu.&t=2305","code":"#' Second Template to prepare a presentation for the Joint Data Interpretation Session #'  # usethis::use_rmarkdown_template( #   template_name = \"template_2_interpretation\", #   template_dir = NULL, #   template_description = \"Joint Data Interpretation\", #   template_create_dir = TRUE # )"},{"path":"/articles/crunching-function-for-xlsform.html","id":"report-template-c-for-dissemination-and-data-story-telling-template","dir":"Articles","previous_headings":"Report generation","what":"Report Template C for Dissemination and Data Story Telling Template","title":"Crunching Function for XlsForm","text":"last template can used take note data interpretation session. generate PDF paginated HTML page","code":"#' Report Template 3 for Dissemination and Data Story Telling Template #' The last template can be used to take note of the data interpretation session.  #' It will generate a PDF or an paginated HTML page # usethis::use_rmarkdown_template( #   template_name = \"template_3_dissemination\", #   template_dir = NULL, #   template_description = \"Data brief and Story Telling\", #   template_create_dir = TRUE # )"},{"path":"/articles/crunching-function-for-xlsform.html","id":"shiny-app","dir":"Articles","previous_headings":"Report generation","what":"Shiny App","title":"Crunching Function for XlsForm","text":"","code":"# app_kobocruncher(theme=\"flatly\")"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Edouard Legoupil. Author, maintainer. Hisham Galal. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Legoupil E, Galal H (2023). kobocruncher: Metapackage Survey Data Crunching. R package version 0.2.1, https://Edouard-Legoupil.github.io/kobocruncher/docs/.","code":"@Manual{,   title = {kobocruncher: A Metapackage For Survey Data Crunching},   author = {Edouard Legoupil and Hisham Galal},   year = {2023},   note = {R package version 0.2.1},   url = {https://Edouard-Legoupil.github.io/kobocruncher/docs/}, }"},{"path":"/index.html","id":"kobocruncher","dir":"","previous_headings":"","what":"A Metapackage For Survey Data Crunching","title":"A Metapackage For Survey Data Crunching","text":"organized workflow generating ‘Rmd’ files extended ‘xlsform’ questionnaire structure facilitate survey data crunching. kobocruncher support organised data analysis workflow, conduct data discovery analysis data collected KoboToolbox, ODK, ONA xlsform compliant data collection platform. package first builds capacity UNHCR Kobo server can also used structured dataset. comes companion tool Integrated Framework Household Survey.","code":""},{"path":"/index.html","id":"tutorial","dir":"","previous_headings":"","what":"Tutorial","title":"A Metapackage For Survey Data Crunching","text":"kobocruncher aims helping humanitarian data analysts focus data interpretation saving time needed quickly generate graphs charts required discover insights dataset. also ensure analysis reproducibility separation analysis configuration analysis process. package allows account sample weights hierarchical dataset structure (capacities available default reporting engine excel-analyzer). Presentations / tutorials one day training workshop accessible : 00-Intro 01-First Report 02-Relabeling 03-Grouping Questions 04-Setting Crosstabulation 05-Searching Asssociation 06-Cleaning Indicator Calculation 07-Weighting 08-Anonymising 09-Publishing","code":""},{"path":"/index.html","id":"install","dir":"","previous_headings":"","what":"Install","title":"A Metapackage For Survey Data Crunching","text":"","code":"install.packages(\"pak\")  ### Install Key unhcRverse packages in order to get the corporate style & brand pak::pkg_install('vidonne/unhcrdown') pak::pkg_install('vidonne/unhcrthemes') pak::pkg_install('galalH/riddle') ## Now get {kobocruncher} pak::pkg_install(\"edouard-legoupil/kobocruncher\")"},{"path":"/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"A Metapackage For Survey Data Crunching","text":"Contributions packages welcome. Please read first contribution guidelines, follow code conduct use issue template.","code":""},{"path":"/index.html","id":"references-and-rational-for-the-package","dir":"","previous_headings":"","what":"References and rational for the package","title":"A Metapackage For Survey Data Crunching","text":"package falls category Automatic Data Exploration package (see extensive review ) mostly act wrapper different specialized packages tidyverse . Compare packages, kobocruncher provides: integration data processing stages, visualization approach exploration documented original xlsform used collect data UNHCR standard Survey Data Collection based Kobotoolbox. allows reproducible analysis Multiple notebook templates standard charts designed interpretable non-technical audience Relabeling functions Questions grouping ability Full integration UNHCR Brand Style","code":""},{"path":"/reference/app_kobocruncher.html","id":null,"dir":"Reference","previous_headings":"","what":"Shiny App - app_kobocruncher — app_kobocruncher","title":"Shiny App - app_kobocruncher — app_kobocruncher","text":"starts graphical user interface developed shiny.","code":""},{"path":"/reference/app_kobocruncher.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shiny App - app_kobocruncher — app_kobocruncher","text":"","code":"app_kobocruncher(   maxRequestSize = 50,   debug = FALSE,   theme = \"IHSN\",   ...,   shiny.server = FALSE )"},{"path":"/reference/app_kobocruncher.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shiny App - app_kobocruncher — app_kobocruncher","text":"maxRequestSize (numeric) number defining maximum allowed filesize (megabytes) uploaded files, defaults 50MB debug logical TRUE, set shiny-debugging options theme select stylesheet interface. Supported choices 'yeti' 'flatly' 'journal' 'IHSN' ... arguments (e.g host) passed runApp starting shiny application shiny.server Setting parameter TRUE return app form object rather invoking . useful deploying app_kobocruncher via shiny-server.","code":""},{"path":"/reference/app_kobocruncher.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Shiny App - app_kobocruncher — app_kobocruncher","text":"starts interactive graphical user interface","code":""},{"path":"/reference/app_kobocruncher.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Shiny App - app_kobocruncher — app_kobocruncher","text":"","code":"# app_kobocruncher(theme=\"flatly\")"},{"path":"/reference/kobo_anonymise.html","id":null,"dir":"Reference","previous_headings":"","what":"Assess Statistical disclosure risk based on an intrusions scenario — kobo_anonymise","title":"Assess Statistical disclosure risk based on an intrusions scenario — kobo_anonymise","text":"personal data collected, performing basic de-identification (.e. removal direct identifiers) assessing risk re-identification (.e. using indirect identifiers re-identify individuals) key sep perform order able share data multiple analyst. initial step consist defining potential intrusion scenario. suppose document anonymise cell variable Direct identifiers automatically removed data. function perform measurement various statistical disclosure risk measurement selected quasi_identifier sensitive_information.","code":""},{"path":"/reference/kobo_anonymise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assess Statistical disclosure risk based on an intrusions scenario — kobo_anonymise","text":"","code":"kobo_anonymise(datalist, dico)"},{"path":"/reference/kobo_anonymise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assess Statistical disclosure risk based on an intrusions scenario — kobo_anonymise","text":"datalist object \"datalist\" class defined kobocruncher dico object \"kobodico\" class format defined kobocruncher","code":""},{"path":"/reference/kobo_anonymise.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assess Statistical disclosure risk based on an intrusions scenario — kobo_anonymise","text":"","code":"# dico <- kobo_dico( xlsformpath = system.file(\"sample_xlsform.xlsx\", package = \"kobocruncher\") ) # datalist <- kobo_data(datapath = system.file(\"data.xlsx\", package = \"kobocruncher\") ) #  # kobo_anonymise(datalist = datalist, #                    dico = dico, #                 indicatoradd = indicatoradd   )"},{"path":"/reference/kobo_clean.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply cleaning to selected variables within the xlsform — kobo_clean","title":"Apply cleaning to selected variables within the xlsform — kobo_clean","text":"Basic data cleaning often required. functions covers tow use cases: Use Case 1 - Need re-categorize modalities select_one select_multiple Use case 2-  Need re-encode one variable based cleaned open text question address situation, kobo_clean function building, set-,  cleaning log variables clean cell empty within extended xlsform. cleaning log 3 columns: variable - old value - new value cleaning log can easily adjusted excel used cleaning workflow running function. cell clean variables refers name another variable also included cleaning log, second variable used clean first one second one. behavior allow manage use case 2. Note function can also used adjust order treat data reduce data disclosure risk See kobo_anonymise","code":""},{"path":"/reference/kobo_clean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply cleaning to selected variables within the xlsform — kobo_clean","text":"","code":"kobo_clean(datalist, dico)"},{"path":"/reference/kobo_clean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply cleaning to selected variables within the xlsform — kobo_clean","text":"datalist object \"datalist\" class defined kobocruncher dico object \"kobodico\" class format defined kobocruncher indicatoradd list instruction create new calculated indicator","code":""},{"path":"/reference/kobo_clean.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply cleaning to selected variables within the xlsform — kobo_clean","text":"","code":"# dico <- kobo_dico( xlsformpath = system.file(\"sample_xlsform.xlsx\", package = \"kobocruncher\") ) # datalist <- kobo_data(datapath = system.file(\"data.xlsx\", package = \"kobocruncher\") ) #  # kobo_clean(datalist = datalist, #                    dico = dico, #                 indicatoradd = indicatoradd   )"},{"path":"/reference/kobo_cruncher.html","id":null,"dir":"Reference","previous_headings":"","what":"Crunch all variables according to the analysis plan — kobo_cruncher","title":"Crunch all variables according to the analysis plan — kobo_cruncher","text":"Crunch variables according analysis plan","code":""},{"path":"/reference/kobo_cruncher.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Crunch all variables according to the analysis plan — kobo_cruncher","text":"","code":"kobo_cruncher(datalist = datalist, datasource = NULL, dico = dico)"},{"path":"/reference/kobo_cruncher.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Crunch all variables according to the analysis plan — kobo_cruncher","text":"datalist object \"datalist\" class defined kobocruncher datasource name data source display, set NULL - pulls form_title within settings xlsform dico path xlsform file used colllect data","code":""},{"path":"/reference/kobo_cruncher.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Crunch all variables according to the analysis plan — kobo_cruncher","text":"","code":"dico <- kobo_dico( xlsformpath = system.file(\"sample_xlsform.xlsx\", package = \"kobocruncher\") ) datalist <- kobo_data(datapath = system.file(\"data.xlsx\", package = \"kobocruncher\") )  kobo_cruncher(datalist = datalist,               dico = dico,               datasource = \"a great survey!\") #>  #> Where is the interview taking place #> `plot_select_one(datalist = datalist, dico = dico, \"location\")`  #>  #>   #> Loading required package: ggplot2  #> ------ #>  #>  #>  #> ## Respondant profile #>  #>  #> What is your country of Origin? #> `plot_select_one(datalist = datalist, dico = dico, \"profile.country\")`  #>  #>   #> Loading required package: tm #> Loading required package: NLP #>  #> Attaching package: ‘NLP’ #> The following object is masked from ‘package:ggplot2’: #>  #>     annotate #> Warning: transformation drops documents #> Warning: transformation drops documents #> Warning: transformation drops documents #> Warning: transformation drops documents #> Warning: transformation drops documents #> Warning: transformation drops documents #> Warning: transformation drops documents #> Warning: transformation drops documents #> Warning: transformation drops documents #> Warning: transformation drops documents  #>  #> What's you occupation? #>   `plot_text(datalist = datalist, dico = dico, \"profile.occupation\")`   #>   #> Why did you left? #>   `plot_select_multiple(datalist = datalist, dico = dico, \"profile.reason\")`  #>  #>    #> What's the size of your household? #>   `plot_integer(datalist = datalist, dico = dico, \"profile.HHSize\")`  #>  #>   #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.  #> Age #>   `plot_integer(datalist = datalist, dico = dico, \"members.age\")`  #>  #>   #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.  #>  #> Sex #> `plot_select_one(datalist = datalist, dico = dico, \"members.sex\")`  #>  #>"},{"path":"/reference/kobo_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Data loading — kobo_data","title":"Data loading — kobo_data","text":"Data loading","code":""},{"path":"/reference/kobo_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data loading — kobo_data","text":"","code":"kobo_data(datapath)"},{"path":"/reference/kobo_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data loading — kobo_data","text":"datapath path file data format extracted kobo dot group separator xml header","code":""},{"path":"/reference/kobo_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Data loading — kobo_data","text":"\"datalist\" S3 class object (list) formatted specifications \"kobocruncher\".","code":""},{"path":"/reference/kobo_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data loading — kobo_data","text":"","code":"datalist <- kobo_data(datapath = system.file(\"data.xlsx\", package = \"kobocruncher\") ) # MainFrame datalist[[\"main\"]] #> # A tibble: 5 × 26 #>   start               end                 location       profi…¹ profi…² profi…³ #>   <dttm>              <dttm>              <chr>          <chr>   <chr>   <chr>   #> 1 2022-10-27 08:57:57 2022-11-10 08:49:09 private_facil… VEN     Consul… accomo… #> 2 2022-10-24 11:36:52 2022-10-24 15:46:00 home           HND     farmer  accomo… #> 3 2022-10-26 16:19:35 2022-10-26 18:15:07 subcenter      SLV     vendor  educat… #> 4 2022-10-26 16:19:35 2022-10-26 17:51:14 subcenter      SLV     teacher safety… #> 5 2022-10-26 14:02:06 2022-10-26 16:10:25 home           COL     farmer  employ… #> # … with 20 more variables: profile.reason.accomodation <dbl>, #> #   profile.reason.employment <dbl>, profile.reason.education <dbl>, #> #   profile.reason.community <dbl>, profile.reason.safety <dbl>, #> #   profile.reason.movement <dbl>, profile.reason.reunification <dbl>, #> #   profile.reason.no_answer <dbl>, profile.reason.other <dbl>, #> #   profile.HHSize <dbl>, `_id` <dbl>, `_uuid` <chr>, `_submission_time` <dbl>, #> #   `_validation_status` <lgl>, `_notes` <lgl>, `_status` <chr>, … # Second Frame - based on presence of repeat within the form, aka nested or # hierarchical data structure, etc...  datalist[[\"members\"]] #> # A tibble: 12 × 14 #>    members.age members…¹ _inde…² _pare…³ _pare…⁴ _subm…⁵ _subm…⁶ _subm…⁷ _subm…⁸ #>          <dbl> <chr>       <dbl> <chr>     <dbl>   <dbl> <chr>     <dbl> <lgl>   #>  1          56 male            1 Sample…       1  2.08e7 48cc75…  44686. NA      #>  2           2 male            2 Sample…       2  2.08e7 f1c3d3…  44686. NA      #>  3           3 male            3 Sample…       2  2.08e7 f1c3d3…  44686. NA      #>  4          10 female          4 Sample…       2  2.08e7 f1c3d3…  44686. NA      #>  5          45 male            5 Sample…       2  2.08e7 f1c3d3…  44686. NA      #>  6          35 female          6 Sample…       2  2.08e7 f1c3d3…  44686. NA      #>  7           4 male            7 Sample…       3  2.08e7 1bac72…  44686. NA      #>  8          34 female          8 Sample…       3  2.08e7 1bac72…  44686. NA      #>  9          34 male            9 Sample…       3  2.08e7 1bac72…  44686. NA      #> 10          51 female         10 Sample…       4  2.08e7 aa9f07…  44686. NA      #> 11          21 male           11 Sample…       5  2.08e7 e83161…  44686. NA      #> 12          25 female         12 Sample…       5  2.08e7 e83161…  44686. NA      #> # … with 5 more variables: `_submission__notes` <lgl>, #> #   `_submission__status` <chr>, `_submission__submitted_by` <lgl>, #> #   `_submission__tags` <lgl>, parent_index <dbl>, and abbreviated variable #> #   names ¹​members.sex, ²​`_index`, ³​`_parent_table_name`, ⁴​`_parent_index`, #> #   ⁵​`_submission__id`, ⁶​`_submission__uuid`, ⁷​`_submission__submission_time`, #> #   ⁸​`_submission__validation_status`"},{"path":"/reference/kobo_dico.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare Analysis plan — kobo_dico","title":"Prepare Analysis plan — kobo_dico","text":"Prepare Analysis plan","code":""},{"path":"/reference/kobo_dico.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare Analysis plan — kobo_dico","text":"","code":"kobo_dico(xlsformpath)"},{"path":"/reference/kobo_dico.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare Analysis plan — kobo_dico","text":"xlsformpath path (extended) xlsform file used collect data","code":""},{"path":"/reference/kobo_dico.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare Analysis plan — kobo_dico","text":"\"kobodico\" S3 class object (list) formatted specifications \"kobocruncher\".","code":""},{"path":"/reference/kobo_dico.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare Analysis plan — kobo_dico","text":"","code":"dico <- kobo_dico( xlsformpath = system.file(\"sample_xlsform.xlsx\", package = \"kobocruncher\") ) # Survey questions <- as.data.frame(dico[[\"variables\"]]) knitr::kable(utils::head(questions, 10)) #>  #>  #> |type            |list_name |name               |label                                           |hint           |repeatvar |scope   |chapter |subchapter |disaggregation |correlate |appearance | #> |:---------------|:---------|:------------------|:-----------------------------------------------|:--------------|:---------|:-------|:-------|:----------|:--------------|:---------|:----------| #> |today           |NA        |today              |NA                                              |NA             |main      |        |NA      |NA         |NA             |NA        |           | #> |date            |NA        |date               |Interview  date                                 |this is a hint |main      |        |NA      |NA         |NA             |NA        |           | #> |select_one      |location  |location           |Where is the interview taking place             |this is a hint |main      |        |NA      |NA         |NA             |NA        |           | #> |begin_group     |NA        |profile.profile    |Respondant profile                              |NA             |main      |profile |NA      |NA         |NA             |NA        |           | #> |select_one      |countries |profile.country    |What is your country of Origin?                 |this is a hint |main      |profile |NA      |NA         |NA             |NA        |           | #> |text            |NA        |profile.occupation |What's you occupation?                          |this is a hint |main      |profile |NA      |NA         |NA             |NA        |           | #> |select_multiple |reasons   |profile.reason     |Why did you left?                               |this is a hint |main      |profile |NA      |NA         |NA             |NA        |           | #> |integer         |NA        |profile.HHSize     |What's the size of your household?              |this is a hint |main      |profile |NA      |NA         |NA             |NA        |           | #> |end_group       |NA        |NA                 |NA                                              |NA             |main      |        |NA      |NA         |NA             |NA        |           | #> |begin_repeat    |NA        |members.members    |Please enter information for each family member |NA             |members   |members |NA      |NA         |NA             |NA        |           | # Choices responses <- as.data.frame(dico[[\"modalities\"]]) knitr::kable(utils::head(responses, 10)) #>  #>  #> |list_name |name             |label            |order | #> |:---------|:----------------|:----------------|:-----| #> |location  |home             |Home             |NA    | #> |location  |subcenter        |Community Center |NA    | #> |location  |private_facility |Private facility |NA    | #> |sex       |male             |Male             |NA    | #> |sex       |female           |Female           |NA    | #> |countries |COL              |Colombia         |NA    | #> |countries |CUB              |Cuba             |NA    | #> |countries |SLV              |El Salvador      |NA    | #> |countries |GTM              |Guatemala        |NA    | #> |countries |HND              |Honduras         |NA    | # Settings metadata <- as.data.frame(dico[[\"settings\"]]) knitr::kable(utils::head(metadata, 10)) #>  #>  #> |form_title                |form_id    | #> |:-------------------------|:----------| #> |Sample Dataset KoboloadeR |koboloadeR | # Report ToC toc <- as.data.frame(dico[[\"plan\"]]) knitr::kable(utils::head(toc, 10)) #>  #>  #> |type            |label                                           |name               | #> |:---------------|:-----------------------------------------------|:------------------| #> |today           |NA                                              |today              | #> |date            |Interview  date                                 |date               | #> |select_one      |Where is the interview taking place             |location           | #> |begin_group     |Respondant profile                              |profile.profile    | #> |select_one      |What is your country of Origin?                 |profile.country    | #> |text            |What's you occupation?                          |profile.occupation | #> |select_multiple |Why did you left?                               |profile.reason     | #> |integer         |What's the size of your household?              |profile.HHSize     | #> |begin_repeat    |Please enter information for each family member |members.members    | #> |integer         |Age                                             |members.age        | # Indicator indicator <- as.data.frame(dico[[\"indicator\"]]) knitr::kable(utils::head(indicator, 10)) #>  #>  #> |type |name |label |list_name |hint |repeatvar |calculation |chapter |subchapter |disaggregation |correlate |cluster |predict |score |mappoint |mappoly | #> |:----|:----|:-----|:---------|:----|:---------|:-----------|:-------|:----------|:--------------|:---------|:-------|:-------|:-----|:--------|:-------|"},{"path":"/reference/kobo_frame.html","id":null,"dir":"Reference","previous_headings":"","what":"get the correct frame for one selected variable - important when having variables within a repeat — kobo_frame","title":"get the correct frame for one selected variable - important when having variables within a repeat — kobo_frame","text":"get correct frame one selected variable - important variables within repeat","code":""},{"path":"/reference/kobo_frame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get the correct frame for one selected variable - important when having variables within a repeat — kobo_frame","text":"","code":"kobo_frame(datalist, dico, var)"},{"path":"/reference/kobo_frame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get the correct frame for one selected variable - important when having variables within a repeat — kobo_frame","text":"datalist object \"datalist\" class defined kobocruncher dico object \"kobodico\" class format defined kobocruncher var variable","code":""},{"path":"/reference/kobo_frame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get the correct frame for one selected variable - important when having variables within a repeat — kobo_frame","text":"","code":"dico <- kobo_dico( xlsformpath = system.file(\"sample_xlsform.xlsx\", package = \"kobocruncher\") ) datalist <- kobo_data(datapath = system.file(\"data.xlsx\", package = \"kobocruncher\") )  data <- kobo_frame(datalist = datalist,                    dico = dico,                    var = \"members.sex\"   ) knitr::kable(utils::head(data,5)) #>  #>  #> | members.age|members.sex | _index|_parent_table_name        | _parent_index| _submission__id|_submission__uuid                    | _submission__submission_time|_submission__validation_status |_submission__notes |_submission__status |_submission__submitted_by |_submission__tags | parent_index|X_id | #> |-----------:|:-----------|------:|:-------------------------|-------------:|---------------:|:------------------------------------|----------------------------:|:------------------------------|:------------------|:-------------------|:-------------------------|:-----------------|------------:|:----| #> |          56|male        |      1|Sample Dataset KoboloadeR |             1|        20759478|48cc75b7-3d86-4c3e-a99b-24b4032b7b9c |                     44685.89|NA                             |NA                 |submitted_via_web   |NA                        |NA                |            1|1    | #> |           2|male        |      2|Sample Dataset KoboloadeR |             2|        20756978|f1c3d36c-3c25-4581-9f35-9c8ec405d744 |                     44685.84|NA                             |NA                 |submitted_via_web   |NA                        |NA                |            2|2    | #> |           3|male        |      3|Sample Dataset KoboloadeR |             2|        20756978|f1c3d36c-3c25-4581-9f35-9c8ec405d744 |                     44685.84|NA                             |NA                 |submitted_via_web   |NA                        |NA                |            2|3    | #> |          10|female      |      4|Sample Dataset KoboloadeR |             2|        20756978|f1c3d36c-3c25-4581-9f35-9c8ec405d744 |                     44685.84|NA                             |NA                 |submitted_via_web   |NA                        |NA                |            2|4    | #> |          45|male        |      5|Sample Dataset KoboloadeR |             2|        20756978|f1c3d36c-3c25-4581-9f35-9c8ec405d744 |                     44685.84|NA                             |NA                 |submitted_via_web   |NA                        |NA                |            2|5    |"},{"path":"/reference/kobo_indicator.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply existing documented indicators and add new ones — kobo_indicator","title":"Apply existing documented indicators and add new ones — kobo_indicator","text":"function goes steps: 1 - load indicators, 2 - append one inidcatoradd , 3 - apply indicator, .e. calculation, 4 - re-save working indicator definition within extended xlsform 5 - bind new indicators dictionary order use kobo_frame() function plotting 6 - rebuild plan indicators allocated chapter, subchapter","code":""},{"path":"/reference/kobo_indicator.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply existing documented indicators and add new ones — kobo_indicator","text":"","code":"kobo_indicator(   datalist,   dico,   xlsformpath,   xlsformpathout,   indicatoradd = NULL,   showcode = FALSE )"},{"path":"/reference/kobo_indicator.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply existing documented indicators and add new ones — kobo_indicator","text":"datalist object \"datalist\" class defined kobocruncher dico object \"kobodico\" class format defined kobocruncher xlsformpath path (extended) xlsform file used collect data xlsformpathout path save xlsform file newly added indicators indicatoradd list containing key information add calculated indicator within analysis plan showcode display code","code":""},{"path":"/reference/kobo_indicator.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply existing documented indicators and add new ones — kobo_indicator","text":"expanded object includes expanded dico datalist","code":""},{"path":"/reference/kobo_indicator.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply existing documented indicators and add new ones — kobo_indicator","text":"","code":"xlsformpath <- system.file(\"sample_xlsform.xlsx\", package = \"kobocruncher\") xlsformpathout <- \"sample_xlsform_withindic.xlsx\"  dico <- kobo_dico( xlsformpath = system.file(\"sample_xlsform.xlsx\", package = \"kobocruncher\") ) datalist <- kobo_data(datapath = system.file(\"data.xlsx\", package = \"kobocruncher\") )  ## Check if we add no indicator expanded  <- kobo_indicator(datalist = datalist,                             dico = dico,                             indicatoradd = NULL ,                             xlsformpath = xlsformpath,                             xlsformpathout = xlsformpathout) #> no calculated indicators has been defined...    ## Example 1: Simple dummy filter indicatoradd <- c(  name =  \"inColombia\",                     type = \"select_one\",                     label = \"Is from Colombia\",                     repeatvar = \"main\",                     calculation = \"dplyr::if_else(datalist[[\\\"main\\\"]]$profile.country ==\\\"COL\\\", \\\"yes\\\",\\\"no\\\")\")  expanded  <- kobo_indicator(datalist = datalist,                     dico = dico,                  indicatoradd = indicatoradd ,                  xlsformpath = xlsformpath,                  xlsformpathout = xlsformpathout) ## Replace existing dico <- expanded[[\"dico\"]] datalist <- expanded[[\"datalist\"]]  ## Check my new indicator table(datalist[[1]]$inColombia, useNA = \"ifany\") #>  #>  no yes  #>   4   1     ## Example 2: calculation on nested elements and build an indicator list indicatoradd2 <- c(  name =  \"hasfemalemembers\",               type = \"select_one\",               label = \"HH has female members \",               repeatvar = \"main\",               calculation = \"datalist[[\\\"members\\\"]] |>                             dplyr::select( members.sex, parent_index) |>                             tidyr::gather(  parent_index, members.sex) |>                             dplyr::count(parent_index, members.sex) |>                             tidyr::spread(members.sex, n, fill = 0)  |>                            dplyr::select( female)\")  indicatorall <- list(indicatoradd, indicatoradd2  )   expanded  <- kobo_indicator(datalist = datalist,                     dico = dico,                  indicatoradd = indicatorall ,                  xlsformpath = xlsformpath,                  xlsformpathout = xlsformpathout) ## Replace existing dico <- expanded[[\"dico\"]] datalist <- expanded[[\"datalist\"]]   ## Check my new indicator table(datalist[[1]]$hasfemalemembers, useNA = \"ifany\") #> female #> 0 1 2  #> 1 3 1   #   Example of calculations: #    #   1. Create a filters on specific criteria #   'dplyr::if_else(datalist[[\"main\"]]$variable ==\"criteria\", \"yes\",\"no\")' #    #    #   2. Ratio between 2 numeric variable #   'datalist[[\"main\"]]$varnum1 / datalist[[\"main\"]]$varnum2' #    #    #   3. Calculation on date - month between data and now calculated in months #   'lubridate::interval( datalist[[\"main\"]]$datetocheck,  #                         lubridate::today()) %/%  months(1)' #    #   4. Discretization of numeric variable according to quintile #   'Hmisc::cut2(datalist[[\"main\"]]$varnum, g =5)' #    #   5. Discretization of numeric variable according to fixed break -  #   for instance case size from integer to categoric #   'cut(datalist[[\"main\"]]$casesize, breaks = c(0, 1, 2, 3,5,30),  #   labels = c(\"Case.size.1\", \"Case.size.2\", \"Case.size.3\",  #   \"Case.size.4.5\", \"Case.size.6.or.more\" ), include.lowest=TRUE)' #    #   6. Aggregate variable from nested frame (aka within repeat) to parent table #   'datalist[[\"members\"]] |> #       dplyr::select( members.sex, parent_index) |> #       tidyr::gather(  parent_index, members.sex) |> #       dplyr::count(parent_index, members.sex) |> #       tidyr::spread(members.sex, n, fill = 0)  |> #       dplyr::select( female)'"},{"path":"/reference/kobo_likert.html","id":null,"dir":"Reference","previous_headings":"","what":"Crunch all likert variables according to the analysis plan — kobo_likert","title":"Crunch all likert variables according to the analysis plan — kobo_likert","text":"Crunch likert variables according analysis plan","code":""},{"path":"/reference/kobo_likert.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Crunch all likert variables according to the analysis plan — kobo_likert","text":"","code":"kobo_likert(datalist = datalist, datasource = NULL, dico = dico)"},{"path":"/reference/kobo_likert.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Crunch all likert variables according to the analysis plan — kobo_likert","text":"datalist object \"datalist\" class defined kobocruncher datasource name data source display, set NULL - pulls form_title within settings xlsform dico path xlsform file used colllect data","code":""},{"path":"/reference/kobo_likert.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Crunch all likert variables according to the analysis plan — kobo_likert","text":"","code":"dicolikert <- kobo_dico( xlsformpath = system.file(\"form_likert.xlsx\", package = \"kobocruncher\") ) datalistlikert <- kobo_data(datapath = system.file(\"data_likert.xlsx\", package = \"kobocruncher\") ) #> Warning: Unknown or uninitialised column: `_index`.  kobo_likert(datalist = datalistlikert,               dico = dicolikert,               datasource = \"a great survey!\") #> Loading required package: dplyr #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union #> 3 groups of likert questions in the form #> Loading required package: likert #> Loading required package: xtable #>  #> Attaching package: ‘likert’ #> The following object is masked from ‘package:dplyr’: #>  #>     recode #> Loading required package: cowplot #>  `plot_likert(datalist = datalist, dico = dico,  scopei =  \"group_ei8jz33\",   list_namei =  \"yk0td68\",  repeatvari =  \"main\")`  #>  #>   #> Warning: `funs()` was deprecated in dplyr 0.8.0. #> ℹ Please use a list of either functions or lambdas: #>  #> # Simple named list: list(mean = mean, median = median) #>  #> # Auto named with `tibble::lst()`: tibble::lst(mean, median) #>  #> # Using lambdas list(~ mean(., trim = .2), ~ median(., na.rm = TRUE)) #> ℹ The deprecated feature was likely used in the kobocruncher package. #>   Please report the issue at #>   <https://github.com/Edouard-Legoupil/kobocruncher/issues>.  #>  `plot_likert(datalist = datalist, dico = dico,  scopei =  \"group_pm0cj55\",   list_namei =  \"yk0td68\",  repeatvari =  \"main\")`  #>  #>    #>  `plot_likert(datalist = datalist, dico = dico,  scopei =  \"group_wc0ig44\",   list_namei =  \"yk0td68\",  repeatvari =  \"main\")`  #>  #>"},{"path":"/reference/kobo_prepare_form.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare XLSform and review Analysis — kobo_prepare_form","title":"Prepare XLSform and review Analysis — kobo_prepare_form","text":"Prepare XLSform adding instructions analysis plan checking structure settings correct. function open xlsform - extend required including excel formatting, display analysis plan summary resave file end. elements set , automatically considered automatic crunching phase. additional worksheet also created document information required registration UNHCR CKAN instance http://ridl.unhcr.org Configuration questions grouped together report: chapter: default crunching report presented according group. set, replace original grouping. variable defined within chapter displayed crunching report. dafault chapter follow questions sequence - chapters start number number overrule sequence subchapter: provides second level details chapter subchapters start number number overrule sequence Configuration data manipulation: clean: define variable shall re-categorized cleaning - local copy levels locally saved order mapping excel. mapping available, automatically applied data. Can useful reduce number categories. anonymise: define variables consider statistical disclosure risk measurement subsequent data treatment Configuration specific charts, visualization analysis: disaggregation: define variable use visual cross tabulation - functions \"_cross\" correlate: define variable use explore statistical association - works certain restrictions (.e. 2 categorical variables ): kobo_correlate cluster: define variable generate unsupervised classification (.e. hierarchical clustering based multiple correspondance analysis) kobo_cluster predict: define variable use generate predictive model, ie.e target variable predictors.  kobo_predict score: define different dimensions score - used score set choice test different aggregation approaches mappoint, mappoly: define variable use generate maps - kobo_map case fields yet exist, function create dummy column one. Also, coloring rows type equal \"begin group\", \"end group\", \"begin repeat\" \"end repeat\" better legibility","code":""},{"path":"/reference/kobo_prepare_form.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare XLSform and review Analysis — kobo_prepare_form","text":"","code":"kobo_prepare_form(xlsformpath, xlsformpathout, label_language = \"\", ridl = \"\")"},{"path":"/reference/kobo_prepare_form.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare XLSform and review Analysis — kobo_prepare_form","text":"xlsformpath full path filename xlsform accessed (xlsx file) xlsformpathout full path filename xlsform accessed (xlsx file) label_language Optional form used multiple languages, indicate language use prepare analysis plan - check first original file -default  ::english (en) ridl available, prefill RIDL info already recorded ","code":""},{"path":"/reference/kobo_prepare_form.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare XLSform and review Analysis — kobo_prepare_form","text":"","code":"# kobo_prepare_form(xlsformpath = system.file(\"form.xlsx\", package = \"kobocruncher\"), #                   xlsformpathout = \"form_with_plan.xlsx\", #                   label_language = \"\")"},{"path":"/reference/kobo_ridl.html","id":null,"dir":"Reference","previous_headings":"","what":"Archive all crunching files in RIDL — kobo_ridl","title":"Archive all crunching files in RIDL — kobo_ridl","text":"RIDL UNHCR instance CKAN server. designed keep track document dataset within organisation. can also used conveniently publish generated report save work notebook working data, want keep track save work place can useful people.","code":""},{"path":"/reference/kobo_ridl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Archive all crunching files in RIDL — kobo_ridl","text":"","code":"kobo_ridl(   ridl,   datafolder,   form,   name_of_this_file,   republish = \"no\",   visibility = \"public\",   stage = \"explo_initial\" )"},{"path":"/reference/kobo_ridl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Archive all crunching files in RIDL — kobo_ridl","text":"ridl ridl container resources added datafolder folder data used notebook stored form names file analysis plan name_of_this_file files archived based name notebook created. function automatically get name notebook run , using basename(rstudioapi::getSourceEditorContext()$path ) republish \"yes\" \"\" Used order overwrite. default \"existing ridl resource required visibility can  \"public\" per default set private obscure reasons.. stage allow document analysis stage exploration_initial crunching initial basic cleaning, relabeling data exploration_advance crunching interpretation_prez dissemination_story","code":""},{"path":"/reference/kobo_ridl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Archive all crunching files in RIDL — kobo_ridl","text":"nothing analysis files added resources","code":""},{"path":"/reference/kobo_ridl.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Archive all crunching files in RIDL — kobo_ridl","text":"function saves resource within  RIDL container used get data : generated report analysis plan, aka extended  xlsform used record relabeling, clean, indicator creation, question grouping, exploration settings source notebook","code":""},{"path":"/reference/kobo_ridl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Archive all crunching files in RIDL — kobo_ridl","text":"","code":"### Example used for each template  # namethisfile = basename(rstudioapi::getSourceEditorContext()$path )   ### template_1_exploration # if( params$publish == \"yes\"){ #   kobo_ridl(ridl = params$ridl,  #                       datafolder = params$datafolder,  #                       form = params$form, #                       name =  namethisfile, #                       republish = params$republish,  #                       visibility =  params$visibility, #                       stage = params$stage) }  ### template_2_interpretation   # if( params$publish == \"yes\"){ #   kobo_ridl(ridl = params$ridl,  #                       datafolder = params$datafolder,  #                       form = params$form, #                       name =  namethisfile, #                       republish = params$republish, #                       visibility =  params$visibility, #                       stage = \"interpretation_prez\") }  ### template_3_dissemination   # if( params$publish == \"yes\"){ #  kobo_ridl(ridl = params$ridl,  #                       datafolder = params$datafolder,  #                       form = params$form, #                       name =  namethisfile, #                       republish = params$republish, #                       visibility =  params$visibility, #                       stage = \"dissemination_story\") }"},{"path":"/reference/label_choiceset.html","id":null,"dir":"Reference","previous_headings":"","what":"Get all the choices labels options for a specific variable if available — label_choiceset","title":"Get all the choices labels options for a specific variable if available — label_choiceset","text":"labeling function ia function factory - https://adv-r.hadley.nz/function-factories.html output function actually function","code":""},{"path":"/reference/label_choiceset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get all the choices labels options for a specific variable if available — label_choiceset","text":"","code":"label_choiceset(dico, x)"},{"path":"/reference/label_choiceset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get all the choices labels options for a specific variable if available — label_choiceset","text":"dico object \"kobodico\" class format defined kobocruncher x variable","code":""},{"path":"/reference/label_choiceset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get all the choices labels options for a specific variable if available — label_choiceset","text":"","code":"dico <- kobo_dico( xlsformpath = system.file(\"sample_xlsform.xlsx\", package = \"kobocruncher\") ) datalist <- kobo_data(datapath = system.file(\"data.xlsx\", package = \"kobocruncher\") )  data <- kobo_frame(datalist = datalist,                    dico = dico,                    var = \"profile.country\"   )  label_choiceset(dico = dico,                  x=\"profile.country\")(data$profile.country) #>           VEN           HND           SLV           SLV           COL  #>   \"Venezuela\"    \"Honduras\" \"El Salvador\" \"El Salvador\"    \"Colombia\"   ## Test when there's no dictionnary data$profile.occupation #> [1] \"Consultant\" \"farmer\"     \"vendor\"     \"teacher\"    \"farmer\"     label_choiceset(dico = dico,                  x=\"profile.occupation\")(data$profile.occupation) #>         <NA>         <NA>         <NA>         <NA>         <NA>  #> \"Consultant\"     \"farmer\"     \"vendor\"    \"teacher\"     \"farmer\""},{"path":"/reference/label_varhint.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Interpretation hint for a specific variable — label_varhint","title":"Get Interpretation hint for a specific variable — label_varhint","text":"Get Interpretation hint specific variable","code":""},{"path":"/reference/label_varhint.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Interpretation hint for a specific variable — label_varhint","text":"","code":"label_varhint(dico, x)"},{"path":"/reference/label_varhint.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Interpretation hint for a specific variable — label_varhint","text":"dico object \"kobodico\" class format defined kobocruncher x variable","code":""},{"path":"/reference/label_varhint.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Interpretation hint for a specific variable — label_varhint","text":"","code":"dico <- kobo_dico( xlsformpath = system.file(\"sample_xlsform.xlsx\", package = \"kobocruncher\") )  label_varhint(dico = dico,                x =\"profile.country\") #> [1] \"this is a hint\""},{"path":"/reference/label_varname.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the label for a specific variable — label_varname","title":"Get the label for a specific variable — label_varname","text":"Get label specific variable","code":""},{"path":"/reference/label_varname.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the label for a specific variable — label_varname","text":"","code":"label_varname(dico, x)"},{"path":"/reference/label_varname.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the label for a specific variable — label_varname","text":"dico object \"kobodico\" class format defined kobocruncher x character variable name","code":""},{"path":"/reference/label_varname.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the label for a specific variable — label_varname","text":"","code":"dico <- kobo_dico( xlsformpath = system.file(\"sample_xlsform.xlsx\", package = \"kobocruncher\") )  label_varname(dico = dico,                x =\"profile.country\") #> [1] \"What is your country of Origin?\""},{"path":"/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"/reference/plot_correlation.html","id":null,"dir":"Reference","previous_headings":"","what":"Plotting Correlation — plot_correlation","title":"Plotting Correlation — plot_correlation","text":"Perform chisquare test display results significant","code":""},{"path":"/reference/plot_correlation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plotting Correlation — plot_correlation","text":"","code":"plot_correlation(   datalist = datalist,   dico = dico,   var,   by_var,   datasource = NULL,   showcode = FALSE )"},{"path":"/reference/plot_correlation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plotting Correlation — plot_correlation","text":"datalist object \"datalist\" class defined kobocruncher dico object \"kobodico\" class format defined kobocruncher var name variable display by_var variable use cross tabulation datasource name data source display, set NULL - pulls form_title within settings xlsform showcode display code","code":""},{"path":"/reference/plot_correlation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plotting Correlation — plot_correlation","text":"","code":"dico <- kobo_dico( xlsformpath = system.file(\"sample_xlsform.xlsx\", package = \"kobocruncher\") ) datalist <- kobo_data(datapath = system.file(\"data.xlsx\", package = \"kobocruncher\") )  plot_correlation(datalist = datalist,               dico = dico,                var = \"profile.occupation\",               by_var = \"profile.country\",               datasource = NULL) #> Warning: Chi-squared approximation may be incorrect #>  #>  No significant association found between profile.occupation &  profile.country (p.value :0.3505)."},{"path":"/reference/plot_header.html","id":null,"dir":"Reference","previous_headings":"","what":"Output Header — plot_header","title":"Output Header — plot_header","text":"Function add headings within crunching report - Headings defaults groups defined xlsform - can replaced within analysis plan chapter subchapter","code":""},{"path":"/reference/plot_header.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Output Header — plot_header","text":"","code":"plot_header(dico = dico, var)"},{"path":"/reference/plot_header.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Output Header — plot_header","text":"dico path xlsform file used colllect data var name variable display","code":""},{"path":"/reference/plot_header.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Output Header — plot_header","text":"text formatted markdown","code":""},{"path":"/reference/plot_header.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Output Header — plot_header","text":"","code":"dico <- kobo_dico( xlsformpath = system.file(\"sample_xlsform.xlsx\", package = \"kobocruncher\") )  plot_header( dico = dico,                var = \"profile.profile\") #> ------ #>  #>  #>  #> ## Respondant profile #>   # class(plot_header( dico = dico,  #               var = \"profile.profile\")) #  dput(plot_header( dico = dico,               var = \"profile.profile\")) #> ------ #>  #>  #>  #> ## Respondant profile #>  #> NULL #  message(plot_header( dico = dico,                 var = \"profile.profile\")) #> ------ #>  #>  #>  #> ## Respondant profile #>  #>   cat(plot_header( dico = dico,                 var = \"profile.profile\")) #> ------ #>  #>  #>  #> ## Respondant profile #>   print(plot_header( dico = dico,                var = \"profile.profile\"),       useSource = FALSE) #> ------ #>  #>  #>  #> ## Respondant profile #>  #> NULL"},{"path":"/reference/plot_integer.html","id":null,"dir":"Reference","previous_headings":"","what":"Plotting numeric variable — plot_integer","title":"Plotting numeric variable — plot_integer","text":"Plotting numeric variable","code":""},{"path":"/reference/plot_integer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plotting numeric variable — plot_integer","text":"","code":"plot_integer(   datalist = datalist,   dico = dico,   var,   datasource = NULL,   showcode = FALSE )"},{"path":"/reference/plot_integer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plotting numeric variable — plot_integer","text":"datalist object \"datalist\" class defined kobocruncher dico object \"kobodico\" class format defined kobocruncher var name variable display datasource name data source display, set NULL - pulls form_title within settings xlsform showcode display code","code":""},{"path":"/reference/plot_integer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plotting numeric variable — plot_integer","text":"","code":"dico <- kobo_dico( xlsformpath = system.file(\"sample_xlsform.xlsx\", package = \"kobocruncher\") ) datalist <- kobo_data(datapath = system.file(\"data.xlsx\", package = \"kobocruncher\") )  plot_integer(datalist = datalist,               dico = dico,                var = \"members.age\",               showcode = TRUE) #> Age #>   `plot_integer(datalist = datalist, dico = dico, \"members.age\")`  #>  #>   #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`."},{"path":"/reference/plot_integer_cross.html","id":null,"dir":"Reference","previous_headings":"","what":"Plotting numeric variable — plot_integer_cross","title":"Plotting numeric variable — plot_integer_cross","text":"Plotting numeric variable","code":""},{"path":"/reference/plot_integer_cross.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plotting numeric variable — plot_integer_cross","text":"","code":"plot_integer_cross(   datalist = datalist,   dico = dico,   var,   by_var,   datasource = NULL,   showcode = FALSE )"},{"path":"/reference/plot_integer_cross.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plotting numeric variable — plot_integer_cross","text":"datalist object \"datalist\" class defined kobocruncher dico object \"kobodico\" class format defined kobocruncher var name variable display by_var variable use cross tabulation datasource name data source display, set NULL - pulls form_title within settings xlsform showcode display code","code":""},{"path":"/reference/plot_integer_cross.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plotting numeric variable — plot_integer_cross","text":"","code":"dico <- kobo_dico( xlsformpath = system.file(\"sample_xlsform.xlsx\", package = \"kobocruncher\") ) datalist <- kobo_data(datapath = system.file(\"data.xlsx\", package = \"kobocruncher\") )  plot_integer_cross(datalist = datalist,               dico = dico,                var = \"members.age\",               by_var = \"members.sex\",               showcode = TRUE)"},{"path":"/reference/plot_likert.html","id":null,"dir":"Reference","previous_headings":"","what":"Plotting Likert — plot_likert","title":"Plotting Likert — plot_likert","text":"Detect 3 questions response options within questions group represent result using standard likert plot - build  https://github.com/jbryer/likert","code":""},{"path":"/reference/plot_likert.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plotting Likert — plot_likert","text":"","code":"plot_likert(   datalist = datalist,   dico = dico,   scopei,   list_namei,   repeatvari,   datasource = NULL,   showcode = FALSE )"},{"path":"/reference/plot_likert.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plotting Likert — plot_likert","text":"datalist object \"datalist\" class defined kobocruncher dico object \"kobodico\" class format defined kobocruncher scopei group likert frame list_namei name likert option list repeatvari name frame within dataset look data datasource name data source display, set NULL - pulls form_title within settings xlsform showcode display code","code":""},{"path":"/reference/plot_likert.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plotting Likert — plot_likert","text":"","code":"dicolikert <- kobo_dico( xlsformpath = system.file(\"form_likert.xlsx\", package = \"kobocruncher\") ) datalistlikert <- kobo_data(datapath = system.file(\"data_likert.xlsx\", package = \"kobocruncher\") ) #> Warning: Unknown or uninitialised column: `_index`.  plot_likert(datalist = datalistlikert,             dico = dicolikert,             datasource = NULL,             scopei =  \"group_ei8jz33\",             repeatvari =   \"main\",             ## getting the list_name and corresponding label             list_namei = \"yk0td68\"            )"},{"path":"/reference/plot_select_multiple.html","id":null,"dir":"Reference","previous_headings":"","what":"Plotting Select multiple variable — plot_select_multiple","title":"Plotting Select multiple variable — plot_select_multiple","text":"Note column order set xlsform choice part, variable de factor considered ordinal default ordering done based frequency","code":""},{"path":"/reference/plot_select_multiple.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plotting Select multiple variable — plot_select_multiple","text":"","code":"plot_select_multiple(   datalist = datalist,   dico = dico,   var,   datasource = NULL,   showcode = FALSE )"},{"path":"/reference/plot_select_multiple.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plotting Select multiple variable — plot_select_multiple","text":"datalist object \"datalist\" class defined kobocruncher dico object \"kobodico\" class format defined kobocruncher var name variable display datasource name data source display, set NULL - pulls form_title within settings xlsform showcode display code","code":""},{"path":"/reference/plot_select_multiple.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plotting Select multiple variable — plot_select_multiple","text":"","code":"dico <- kobo_dico( xlsformpath = system.file(\"sample_xlsform.xlsx\", package = \"kobocruncher\") ) datalist <- kobo_data(datapath = system.file(\"data.xlsx\", package = \"kobocruncher\") )   plot_select_multiple(datalist = datalist,               dico = dico,                var = \"profile.reason\",               showcode = TRUE             ) #> Why did you left? #>   `plot_select_multiple(datalist = datalist, dico = dico, \"profile.reason\")`  #>  #>     # plot_select_multiple(datalist = datalist, #               dico = dico,  #               var = \"profile.reason1\", #               showcode = TRUE #             )"},{"path":"/reference/plot_select_multiple_cross.html","id":null,"dir":"Reference","previous_headings":"","what":"Plotting Select multiple variable with cross tabulation on a second categorical variable — plot_select_multiple_cross","title":"Plotting Select multiple variable with cross tabulation on a second categorical variable — plot_select_multiple_cross","text":"Note column order set xlsform choice part, variable de factor considered ordinal default ordering done based frequency","code":""},{"path":"/reference/plot_select_multiple_cross.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plotting Select multiple variable with cross tabulation on a second categorical variable — plot_select_multiple_cross","text":"","code":"plot_select_multiple_cross(   datalist = datalist,   dico = dico,   var,   by_var,   datasource = NULL,   showcode = FALSE )"},{"path":"/reference/plot_select_multiple_cross.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plotting Select multiple variable with cross tabulation on a second categorical variable — plot_select_multiple_cross","text":"datalist object \"datalist\" class defined kobocruncher dico object \"kobodico\" class format defined kobocruncher var name variable display by_var variable use cross tabulation datasource name data source display, set NULL - pulls form_title within settings xlsform showcode display code","code":""},{"path":"/reference/plot_select_multiple_cross.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plotting Select multiple variable with cross tabulation on a second categorical variable — plot_select_multiple_cross","text":"","code":"dico <- kobo_dico( xlsformpath = system.file(\"sample_xlsform.xlsx\", package = \"kobocruncher\") ) datalist <- kobo_data(datapath = system.file(\"data.xlsx\", package = \"kobocruncher\") )  plot_select_multiple_cross(datalist = datalist,               dico = dico,                var = \"profile.reason\",               by_var = \"location\",               showcode = TRUE) #> Why did you left? #>   `plot_select_multiple_cross(datalist = datalist, dico = dico, \"profile.reason\",\"location\")`  #>  #>"},{"path":"/reference/plot_select_one.html","id":null,"dir":"Reference","previous_headings":"","what":"Plotting Select one variable — plot_select_one","title":"Plotting Select one variable — plot_select_one","text":"Note column order set xlsform choice part, variable de factor considered ordinal default ordering done based frequency","code":""},{"path":"/reference/plot_select_one.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plotting Select one variable — plot_select_one","text":"","code":"plot_select_one(datalist, dico, var, datasource = NULL, showcode = FALSE)"},{"path":"/reference/plot_select_one.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plotting Select one variable — plot_select_one","text":"datalist object \"datalist\" class defined kobocruncher dico object \"kobodico\" class format defined kobocruncher var name variable display datasource name data source display, set NULL - pulls form_title within settings xlsform showcode display code","code":""},{"path":"/reference/plot_select_one.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plotting Select one variable — plot_select_one","text":"","code":"dico <- kobo_dico( xlsformpath = system.file(\"sample_xlsform.xlsx\", package = \"kobocruncher\") ) datalist <- kobo_data(datapath = system.file(\"data.xlsx\", package = \"kobocruncher\") )  plot_select_one(datalist = datalist,               dico = dico,                var = \"profile.country\",               showcode = TRUE) #>  #> What is your country of Origin? #> `plot_select_one(datalist = datalist, dico = dico, \"profile.country\")`  #>  #>     # plot_select_one(datalist = datalist, #               dico = dico,  #               var = \"profile.countryerror\", #               showcode = TRUE)"},{"path":"/reference/plot_select_one_cross.html","id":null,"dir":"Reference","previous_headings":"","what":"Plotting Select one variable with cross tabulation on a second categorical variable — plot_select_one_cross","title":"Plotting Select one variable with cross tabulation on a second categorical variable — plot_select_one_cross","text":"Note column order set xlsform choice part, variable de factor considered ordinal default ordering done based frequency","code":""},{"path":"/reference/plot_select_one_cross.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plotting Select one variable with cross tabulation on a second categorical variable — plot_select_one_cross","text":"","code":"plot_select_one_cross(   datalist = datalist,   dico = dico,   var,   by_var,   datasource = NULL,   showcode = FALSE )"},{"path":"/reference/plot_select_one_cross.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plotting Select one variable with cross tabulation on a second categorical variable — plot_select_one_cross","text":"datalist object \"datalist\" class defined kobocruncher dico object \"kobodico\" class format defined kobocruncher var name variable display by_var variable use cross tabulation datasource name data source display, set NULL - pulls form_title within settings xlsform showcode display code","code":""},{"path":"/reference/plot_select_one_cross.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plotting Select one variable with cross tabulation on a second categorical variable — plot_select_one_cross","text":"","code":"dico <- kobo_dico( xlsformpath = system.file(\"sample_xlsform.xlsx\", package = \"kobocruncher\") ) datalist <- kobo_data(datapath = system.file(\"data.xlsx\", package = \"kobocruncher\") )  plot_select_one_cross(datalist = datalist,               dico = dico,                var = \"profile.country\",               by_var = \"profile.occupation\",               showcode = TRUE               ) #> What is your country of Origin? #>   `plot_select_one_cross(datalist = datalist, dico = dico, \"profile.country\",\"profile.occupation\")`  #>  #>    ## test if variable are not in the same frame... plot_select_one_cross(datalist = datalist,               dico = dico,                var = \"profile.country\",               by_var = \"members.sex\",               showcode = TRUE               )"},{"path":"/reference/plot_text.html","id":null,"dir":"Reference","previous_headings":"","what":"Plotting Open Text variables — plot_text","title":"Plotting Open Text variables — plot_text","text":"Plotting Open Text variables","code":""},{"path":"/reference/plot_text.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plotting Open Text variables — plot_text","text":"","code":"plot_text(   datalist = datalist,   dico = dico,   var,   datasource = NULL,   showcode = FALSE )"},{"path":"/reference/plot_text.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plotting Open Text variables — plot_text","text":"datalist object \"datalist\" class defined kobocruncher dico object \"kobodico\" class format defined kobocruncher var name variable display datasource name data source display, set NULL - pulls form_title within settings xlsform showcode display code","code":""},{"path":"/reference/plot_text.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plotting Open Text variables — plot_text","text":"","code":"dico <- kobo_dico( xlsformpath = system.file(\"sample_xlsform.xlsx\", package = \"kobocruncher\") ) datalist <- kobo_data(datapath = system.file(\"data.xlsx\", package = \"kobocruncher\") )  plot_text(datalist = datalist,               dico = dico,                var = \"profile.occupation\",               showcode = TRUE) #> Warning: transformation drops documents #> Warning: transformation drops documents #> Warning: transformation drops documents #> Warning: transformation drops documents #> Warning: transformation drops documents #> Warning: transformation drops documents #> Warning: transformation drops documents #> Warning: transformation drops documents #> Warning: transformation drops documents #> Warning: transformation drops documents #>  #> What's you occupation? #>   `plot_text(datalist = datalist, dico = dico, \"profile.occupation\")`   #>"},{"path":"/reference/template_1_exploration.html","id":null,"dir":"Reference","previous_headings":"","what":"Initial Template for Automatic Data Exploration — template_1_exploration","title":"Initial Template for Automatic Data Exploration — template_1_exploration","text":"template designed initial data crunching - first RMD template gives output HTML easy navigation - left menu provides smooth transition. includes function automatically run throughout survey content. stage, data cleaning new variable creation can performed iterations report also includes plot syntax can easily pasted second report","code":""},{"path":"/reference/template_1_exploration.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initial Template for Automatic Data Exploration — template_1_exploration","text":"","code":"template_1_exploration(   datafolder = \"data-raw\",   ridl = \"ridlproject\",   data = \"data.xlsx\",   form = \"form.xlsx\",   datasource = \"Study name reference\",   publish = \"no\",   republish = \"no\",   visibility = \"public\",   stage = \"exploration_initial\",   language = \"\",   folder = \"Report\" )"},{"path":"/reference/template_1_exploration.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initial Template for Automatic Data Exploration — template_1_exploration","text":"datafolder \"data-raw\" default folder put data ridl \"ridlproject\" Name ridl project data documented archived data \"data.xlsx\" Name data file form \"form.xlsx\" Name xlsform - datasource \"Study name reference\" ## String used caption charts publish \"\" Put \"yes\" order add report, source analysis plan ressource within ridl c republish \"\" visibility \"public\" stage \"exploration_initial\" may change exploration_advanced configuring many language \"\" Check xlsform - ::english (en) -::french (fr) ::spanish (es) folder folder within project put generated report. Folder created exist","code":""},{"path":"/reference/template_1_exploration.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initial Template for Automatic Data Exploration — template_1_exploration","text":"nothing file report generated","code":""},{"path":"/reference/template_1_exploration.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Initial Template for Automatic Data Exploration — template_1_exploration","text":"","code":"# template_1_exploration(datafolder= \"data-raw\", #                                    ridl =  \"ridlproject\", #                                     data = \"data.xlsx\" , #                                     form =  \"form.xlsx\", #                                     datasource = \"Study name reference\", #                                     publish =  \"no\",  #                                     republish = \"no\", #                                     visibility = \"public\", #                                     stage = \"exploration_initial\", #                                    language = \"\", #                                    folder = \"Report\")"},{"path":"/news/index.html","id":"kobocruncher-010","dir":"Changelog","previous_headings":"","what":"kobocruncher 0.1.0","title":"kobocruncher 0.1.0","text":"Major re-factoring / simplification previous koboloader package - nurtured Hisham Galal !! Standard Reports now available basic Rmd template rather function write Rmd directly… Now using Fusen package mainstream documentation unit testing - see dev folder find Created systematic reprex examples functions within package Removed lot unnecessary packages installation Removed time shinyApp part – rework later… hopefully Golem! Remove packages component related API parsing - fully rely RIDL API Ahmadou Dickoa - recommended practices avoid starting analysis data documented http://ridl.unhcr.org - automation Kobotoolbox RIDL : https://im.unhcr.org/ridl/ Remove packages component related API parsing - fully rely styling packages Cedric Vidonne. non-UNHCR users, shuld complicated fork packages adjust organisation brand style.","code":"remotes::install_github('dickoa/ridl') remotes::install_github('vidonne/unhcrdown') remotes::install_github('vidonne/unhcrdesign') remotes::install_github('vidonne/unhcrtemplate') remotes::install_github('vidonne/unhcrtheme')"}]
